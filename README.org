* fake_d

Fake a two dimensional array using a one dimensional array.

Why? 2d arrays can be a pain to manage in low level languages. This library gives you the interface of a 2d array with the advantages of a 1d array (simpler allocation, easier use of stack memory, et cetera).

5 items are provided:

- ~FD_upper_bound~
- ~FD_get_total_length()~
- ~FD_zero(int arr[])~
- ~FD_set(int arr[], int x, int y, int val)~
- ~FD_get(int arr[], int x, int y)~


~FD_upper_bound~ defaults to ~100~, but you can set it to whatever type of space you need. Declare this before anything else.

Include the lib:

#+BEGIN_SRC C
#include "fake_d.h"
#+END_SRC

Then declare and zero your array:

#+BEGIN_SRC C
int arr[FD_get_total_length()];
FD_zero(arr);
#+END_SRC

Now, you can freely, get and set ~x~ and ~y~ coordinates as if you were using a 2d array:


#+BEGIN_SRC C
FD_set(arr, 11, 7, 42);
FD_get(arr, 11, 7);
// => 42
#+END_SRC

-----

[[https://repl.it/github/ryanpcmcquen/fake_d][Test it on repl.it]]
